<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.2.xsd   
        http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- 启用注解 -->
	<context:annotation-config />
	<aop:aspectj-autoproxy proxy-target-class="true"/>

    <bean id="parentDataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="password" value="${jdbc.password}" />
        <property name="initialSize" value="${initialSize}" />
        <property name="maxIdle" value="${maxIdle}" />
        <property name="minIdle" value="${minIdle}" />
        <property name="maxActive" value="${maxActive}" />
        <property name="maxWait" value="${maxWait}" />
        <property name="validationQuery" value="select 1" />
        <property name="testOnReturn" value="true" />
        <property name="removeAbandoned" value="true" />
        <property name="removeAbandonedTimeout" value="10" />
    </bean>

    <!-- 编写spring 配置文件的配置多数源映射关系 -->
	<bean id="dataSourceMaster" parent="parentDataSource">
		<property name="url" value="${arttrain.write.jdbc.url}" />
		<property name="username" value="${write.jdbc.username}" />
	</bean>
	
	<bean id="dataSourceSlave" parent="parentDataSource">
		<property name="url" value="${arttrain.write.jdbc.url}" />
		<property name="username" value="${read.jdbc.username}" />
	</bean>
	
    <bean id="dataSource" class="com.suning.arttrain.util.SeparateReadAndWriteHandler">  
        <property name="targetDataSources">  
            <map key-type="java.lang.String">  
                <entry key="master" value-ref="dataSourceMaster"></entry>  
                <entry key="slave" value-ref="dataSourceSlave"></entry>  
            </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="dataSourceMaster"/>  
    </bean>

	<!-- mybatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="mapperLocations"
			value="classpath:/mappers/*Mapper.xml" />
		<property name="typeAliasesPackage" value="com.suning.arttrain.persistent" />
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<!-- 扫描mapper对应的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.suning.arttrain.repository" />
		<property name="annotationClass" value="com.suning.arttrain.repository.MyBatisRepository" />
	</bean>
	
	<!-- 事务管理器，注入sessionFactory  -->
    <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
    
    <!-- 配置事务的传播特性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="edit*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="create*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="modify*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <!-- 配置那些类、方法纳入到事务的管理 -->
    <aop:config>
        <aop:pointcut id="transactionManagerMethod" expression="execution(public * com.suning.arttrain.service.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="transactionManagerMethod" order="2"/>
    </aop:config>
	
	
	<context:component-scan base-package="com.suning.arttrain">
	</context:component-scan>
	
	<bean id="md5Encoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder">
	</bean>
	
	<import resource="classpath*:spring-common.xml"/>
    <import resource="classpath*:spring-batch.xml"/>
</beans>